IR

void setup() {
    Serial.begin(9600);
delay(500);
  Serial.println("Welcome to Garbage management\n");
  pinMode(A0,INPUT);
  Serial.begin(9600);
  pinMode(13,OUTPUT);
}

void loop() {
  delay(500);
Serial.println("");
//Serial.println(digitalRead(A0));

if(digitalRead(A0)==0)
{
  digitalWrite(13,HIGH);
  Serial.print("Object Found ");
  }
 else{
    digitalWrite(13,LOW);
    Serial.print("NO Object Found ");
    }

}


UV
const int echoPin = 2; // Echo Pin of Ultrasonic Sensor
const int pingPin = 3; // Trigger Pin of Ultrasonic Sensor
                    
void setup() 
{
  Serial.begin(9600); // Starting Serial Communication
  pinMode(pingPin, OUTPUT); // initialising pin 3 as output
  pinMode(echoPin, INPUT); // initialising pin 2 as input
}

void loop()
{
  long duration, inches, cm;
  
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(10);
  
  digitalWrite(pingPin, LOW);

  
  duration = pulseIn(echoPin, HIGH); // using pulsin function to determine total time
  inches = microsecondsToInches(duration); // calling method
  cm = microsecondsToCentimeters(duration); // calling method
   
  Serial.print(inches);
 
  Serial.print("in");
  Serial.print(cm);
  Serial.print("cm");
  Serial.println();
  if(inches > 200){
    delay(100);
   Serial.print("Garbage near to fill"); 
   delay(100);
   Serial.println();
  }
  else{
       Serial.print("Garbage not near to fill");
        delay(100);
       Serial.println();
  }
  delay(100);
}

long microsecondsToInches(long microseconds) // method to covert microsec to inches 
{
 return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds) // method to covert microsec to centimeters
{
   return microseconds / 29 / 2;
}


GSM
#include <SoftwareSerial.h>
SoftwareSerial SIM900(2, 3);
 
void setup()
{
 SIM900.begin(2400);
 Serial.begin(9600);
 delay(2000); // give time to log on to network. 
}
 
void loop()
{
 SIM900.print("AT+CMGF=1\r"); 
Serial.print("AT+CMGF=1\r"); // AT command to send SMS message
 delay(2000);
 SIM900.println("AT + CMGS = \"+91xxxxxxxxxx\"");// recipient's mobile number
 Serial.println("AT + CMGS = \"+91xxxxxxxxxx\""); // recipient's mobile number
 delay(1000);
SIM900.println("GARBAGE FULL"); // message to send
Serial.println("GARBAGE FULL");
delay(200);
SIM900.println((char)26); // End AT command with a ^Z, ASCII code 26
Serial.println((char)26);
delay(200);
SIM900.println();
delay(5000); // give module time to send SMS

do {} while (1);
}